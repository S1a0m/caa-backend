"""modification des modÃ¨les

Revision ID: 597e434e0dac
Revises: d76b93f01b30
Create Date: 2025-05-20 10:22:16.001223

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '597e434e0dac'
down_revision: Union[str, None] = 'd76b93f01b30'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crossroads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crossroads_id'), 'crossroads', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('traffic_lights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('crossroad_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('traffic_light_cycle', sa.Integer(), nullable=False),
    sa.Column('red_cycle', sa.Integer(), nullable=False),
    sa.Column('orange_cycle', sa.Integer(), nullable=False),
    sa.Column('green_cycle', sa.Integer(), nullable=False),
    sa.Column('begin_color_cycle', sa.Enum('red', 'orange', 'green', name='begincolorcycle'), nullable=True),
    sa.Column('turn_right_if_red', sa.Boolean(), nullable=True),
    sa.Column('speed_limit', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['crossroad_id'], ['crossroads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_traffic_lights_id'), 'traffic_lights', ['id'], unique=False)
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plate_number', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('permitted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicles_id'), 'vehicles', ['id'], unique=False)
    op.create_index(op.f('ix_vehicles_plate_number'), 'vehicles', ['plate_number'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vehicles_plate_number'), table_name='vehicles')
    op.drop_index(op.f('ix_vehicles_id'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index(op.f('ix_traffic_lights_id'), table_name='traffic_lights')
    op.drop_table('traffic_lights')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_crossroads_id'), table_name='crossroads')
    op.drop_table('crossroads')
    # ### end Alembic commands ###
